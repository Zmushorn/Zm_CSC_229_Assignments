public static int getLargest(int arr[], int sz) {
    int iterate1 = 0;
    int iterate2 = 0;
    int largest = 0;
    while (iterate1 < sz - 1) {
        iterate2++;
        if (iterate2 == sz) {
            iterate1++;
            iterate2 = iterate1;
            continue;
        }
        int product = arr[iterate1] * arr[iterate2];
        if (product > largest)
            largest = product;
    }
    return largest;
}

1. Outer loop: iterate1 goes from 0 to sz - 2 (since iterate1 < sz - 1)
2. Inner loop: For each iterate1, iterate2 goes from iterate1 + 1 to sz - 1
Total operations: (sz - 1) + (sz - 2) + (sz - 3) + ... + 1
Sum:  T(sz) = (sz - 1) + (sz - 2) + ... + 1 = (sz - 1) * sz / 2
Solution: This algorithm has O(n^2) Time complexity.
